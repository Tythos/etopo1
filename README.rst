ETOPO1
======

Set of basic tools for handling topographical datasets from NOAA's excellent
"ETOPO1" relief data. Includes three basic operations that can be easily
extended and customized.

.. contents::

Source
------

By default, the scripts use a relief GeoTIFF from the following NOAA resource:

  https://ngdc.noaa.gov/mgg/global/relief/ETOPO1/data/bedrock/grid_registered/georeferenced_tiff/

This can be customized by modifiying the "URL" module-level variable in
"fetch.py" before its entry point is invoked. More information on the ETOPO1
dataset and related resources can be found on the main NOAA website:

  https://ngdc.noaa.gov/mgg/global/global.html

Scripts
-------

* "fetch.py" downloads and extracts the latest relief GeoTIFF to an untracked
  folder within this package (you should only need to do this once).

* "sample.py" uses the relief GeoTIFF to resample a specific area based on a
  KML-defined polygon and a desired resolution (pixels-per-degree).

* "export.py" writes a .PNG heightmap based on a basic color mapping rule.

You should first pip-install the dependencies from the "requirements.txt" file.
Then, check the documentation for each individual script before invoking.

Folders
-------

The "store/" folder contents are untracked. If running scripts for the first
time, you will need to run "fetch.py" first to make sure you have downloaded
and extracted a relief GeoTIFF to this folder.

The "example/" folder contains an "Untitled Polygon.KML" file generated by
drawing a quad as a polygon in Google Earth, which is then exported to this
file. It also contains an "Untitled Polygon.tif" file generated by calling
"sample.py" against the .KML file. Finally, this folder contains a
"Untitled Polygon.png" image depicting the heightmap data in question when
transformed/saved by "export.py".

Example
-------

For an end-to-end example, from the command line::

  > python fetch.py
  Topography written to ETOPO1_Bed_g_geotiff.tif

  > python sample.py "example\Untitled Polygon.kml"
  Sampling for quad between lat [33.250000,33.787000] [deg] and lon [-118.661000,-117.572000] [deg]
  Result sampled at 50.000000 [points/degree] for a final resolution of 1612 [px] x 3268 [px]

  > python export.py "example\Untitled Polygon.tif"
  Exported 1612 [px] x 3268 [px] heightmap to example\Untitled Polygon.png 
